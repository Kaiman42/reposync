#!/usr/bin/env python3
import os, stat

BASES = ['/home/kaiman/Repos/Meus', '/home/kaiman/Repos/Terceiros']
REPOSYNC = '/home/kaiman/Repos/Meus/reposync/reposync.py'
HOOKS = [
    'post-commit',
    'post-merge',
    'post-checkout',
    'post-rewrite',
    'post-applypatch'
]

def is_repo(path):
    return os.path.isdir(os.path.join(path, '.git'))

def iter_repos():
    for base in BASES:
        if os.path.isdir(base):
            for name in os.listdir(base):
                p = os.path.join(base, name)
                if is_repo(p):
                    yield p

def ensure_executable(path):
    st = os.stat(path)
    os.chmod(path, st.st_mode | stat.S_IEXEC)

def write_hook(repo, hook):
    hooks_dir = os.path.join(repo, '.git', 'hooks')
    os.makedirs(hooks_dir, exist_ok=True)
    hook_path = os.path.join(hooks_dir, hook)
    script = f"""#!/bin/bash
# Auto-generated by install_hooks.py
"{REPOSYNC}" "$PWD" >/dev/null 2>&1 &
exit 0
"""
    with open(hook_path, 'w') as f:
        f.write(script)
    ensure_executable(hook_path)
    return hook_path

def main():
    total_repos = 0
    for repo in iter_repos():
        for hook in HOOKS:
            write_hook(repo, hook)
        total_repos += 1
        print(f'Instalados hooks em: {repo}')
    print(f'Concluído. {total_repos} repositórios processados.')

if __name__ == '__main__':
    main()
